services:
  mariadb:
    image: 'mariadb:latest'
    container_name: mariadb
    volumes:
      - ../pkg/configs/sql:/docker-entrypoint-initdb.d
    ports:
      - "18000:3306"
    environment:
      - MYSQL_DATABASE=storybook
      - MYSQL_USER=storybook
      - MYSQL_PASSWORD=blog_server123
      - MYSQL_RANDOM_ROOT_PASSWORD="yes"
    restart: always

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "18001:9000"
      - "18002:9001"
    environment:
      MINIO_ACCESS_KEY: blog_server
      MINIO_SECRET_KEY: blog_server123
    volumes:
      - ../pkg/data/minio/:/data
      - ../pkg/configs/minio/:/root/.minio
    command: server --console-address ':9001' /data
    privileged: true
    restart: always

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "18003:6379"
    volumes:
      - ../pkg/configs/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ../pkg/data/redis/:/data
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: always


  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "18006:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=blog_server
      - MONGO_INITDB_ROOT_PASSWORD=blog_server123
    volumes:
      - ../pkg/data/mongo:/data/db
    restart: always


#  nginx:
#    image: nginx:latest
#    ports:
#      - "18007:80"  # HTTPS 端口
#    networks:
#      - mols_network
#    volumes:
#      - ../pkg/configs/nginx/nginx.conf:/etc/nginx/nginx.conf  # 挂载 Nginx 配置文件
#      - ../pkg/configs/nginx/certs:/etc/nginx/certs            # 挂载 SSL 证书
#    restart:  always


#networks:
#  mols_network:
#    external: true    # 使用已创建的外部网络
