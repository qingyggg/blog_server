syntax = "proto3";

package user;

import "api.proto";
import "common.proto";

option go_package = "hertz/basic/user";

message UserActionRequest {
  string Username = 1[(api.go_tag)='json:"username,required"',(api.vd)='len($)>0'];
  string Password = 2[(api.go_tag)='json:"password,required"',(api.vd)='password($)'];
}

message UserActionResponse {
  int32 status_code = 1[(api.go_tag)='json:"status_code"'];
  string status_msg = 2;
  int64 UserId = 3; // user id
  string UHashId = 4;
}

message UserActionPwdModifyRequest {
  string Username = 1[(api.go_tag)='json:"username,required"',(api.vd)='len($)>0'];
  string NewPassword = 2[(api.go_tag)='json:"new_password,required"',(api.vd)='password($)'];
  string OldPassword = 3[(api.go_tag)='json:"old_password,required"',(api.vd)='password($)'];
}

message UserActionProfileModifyRequest{
  UserProfile User=1[(api.go_tag)='json:"user_profile,required"'];
}

message UserRequest {
  int64 UserId = 1[(api.go_tag)='query:"user_id,required"'];
}

message UserResponse {
  int32 status_code = 1[(api.go_tag)='json:"status_code"'];
  string status_msg = 2;
  User user = 3; // User Info
}

service UserHandler {
  rpc User(UserRequest) returns(UserResponse) {
    option (api.get) = "/blog_server/user/";
  }

  rpc UserRegister(UserActionRequest) returns(UserActionResponse) {
    option (api.post) = "/blog_server/user/register/";
    // When a new user registers, just provide a user name, password, and nickname, and the user name needs to be unique.
    // After successful creation, return the user id and permission token.
  }

  rpc UserLogin(UserActionRequest) returns(UserActionResponse) {
    option (api.post) = "/blog_server/user/login/";
    // When a new user registers, just provide a user name, password, and nickname, and the user name needs to be unique.
    // After successful creation, return the user id and permission token.
  }

  rpc UserPwdModify(UserActionPwdModifyRequest) returns(UserActionResponse){
    option (api.post) = "/blog_server/user/pwd_modify/";
  }

  rpc UserProfileModify(UserActionProfileModifyRequest) returns(UserActionResponse){
    option (api.post) = "/blog_server/user/profile_modify/";
  }
}

