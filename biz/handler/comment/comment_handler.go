// Code generated by hertz generator.

package comment

import (
	"context"
	service "github.com/qingyggg/blog_server/biz/service/comment"
	"github.com/qingyggg/blog_server/pkg/errno"
	"github.com/qingyggg/blog_server/pkg/utils"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	comment "github.com/qingyggg/blog_server/biz/model/hertz/interact/comment"
)

// CommentAction .
// @Summary 新增评论
// @Description 向博文添加新评论
// @Tags 评论
// @Accept  json
// @Produce  json
// @Param   CommentActionRequest body comment.CommentActionRequest true "新增评论请求"
// @Success 200 {object} comment.CommentActionResponse "评论成功添加"
// @Failure 400 {object} common.BaseResponse "无效的请求"
// @Failure 500 {object} common.BaseResponse "服务器内部错误"
// @Router /blog_server/comment/action [post]
func CommentAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.CommentActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		utils.ErrResp(c, err) //type:comment.CommentActionResponse
		return
	}
	err, cHashId := service.NewCommentService(ctx, c).AddNewCmt(&req)
	if err != nil {
		utils.ErrResp(c, err)
		return
	}

	c.JSON(consts.StatusOK, &comment.CommentActionResponse{
		StatusCode: errno.SuccessCode,
		StatusMsg:  errno.SuccessMsg,
		CHashId:    cHashId,
	})
}

// CommentDelAction .
// @Summary 删除评论
// @Description 删除博文中的评论
// @Tags 评论
// @Accept  json
// @Produce  json
// @Param   CommentDelActionRequest body comment.CommentDelActionRequest true "删除评论请求"
// @Success 200 {object} common.BaseResponse "评论成功删除"
// @Failure 400 {object} common.BaseResponse "无效的请求"
// @Failure 500 {object} common.BaseResponse "服务器内部错误"
// @Router /blog_server/comment/action [delete]
func CommentDelAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req comment.CommentDelActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		utils.ErrResp(c, err)
		return
	}
	err = service.NewCommentService(ctx, c).DelCmt(&req)
	if err != nil {
		utils.ErrResp(c, err)
		return
	}
	c.JSON(consts.StatusOK, &comment.CommentActionResponse{
		StatusCode: errno.SuccessCode,
		StatusMsg:  errno.SuccessMsg,
	})
}

// CommentList .
// @Summary 获取评论列表
// @Description 获取博文的评论列表
// @Tags 评论
// @Accept  json
// @Produce  json
// @Param   CommentListRequest query comment.CommentListRequest true "获取评论列表请求"
// @Success 200 {object} comment.CommentListResponse "成功获取评论列表"
// @Failure 400 {object} common.BaseResponse "无效的请求"
// @Failure 500 {object} common.BaseResponse "服务器内部错误"
// @Router /blog_server/comment/list [get]
func CommentList(ctx context.Context, c *app.RequestContext) {
	var err error
	var list []*comment.Comment
	var req comment.CommentListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		utils.ErrResp(c, err)
		return
	}
	if req.Type == 1 {
		err, list = service.NewCommentService(ctx, c).GetTopCmtList(&req)
	} else if req.Type == 2 {
		err, list = service.NewCommentService(ctx, c).GetSubCmtList(&req)
	}
	if err != nil {
		utils.ErrResp(c, err)
		return
	}
	c.JSON(consts.StatusOK, &comment.CommentListResponse{
		StatusCode:  errno.SuccessCode,
		StatusMsg:   errno.SuccessMsg,
		CommentList: list,
	})
}
