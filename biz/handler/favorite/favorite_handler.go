// Code generated by hertz generator.

package favorite

import (
	"context"
	service "github.com/qingyggg/blog_server/biz/service/favorite"
	"github.com/qingyggg/blog_server/pkg/errno"
	"github.com/qingyggg/blog_server/pkg/utils"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	favorite "github.com/qingyggg/blog_server/biz/model/hertz/interact/favorite"
)

// CommentFavoriteAction .
// @Summary 对评论进行点赞或者踩
// @Description Allows a user to comment on a favorite item.
// @Tags 点赞或者踩
// @Accept json
// @Produce json
// @Param request body favorite.FavoriteActionRequest true "Request body for commenting on a favorite"
// @Success 200 {object} favorite.FavoriteActionResponse "Success response"
// @Failure 400 {object} common.BaseResponse "Invalid request"
// @Failure 500 {object} common.BaseResponse "Internal server error"
// @Router /blog_server/favorite/action/comment [post]
func CommentFavoriteAction(ctx context.Context, c *app.RequestContext) {
	var err error
	req := new(favorite.FavoriteActionRequest)
	err = c.BindAndValidate(req)
	if err != nil {
		utils.ErrResp(c, err)
		return
	}
	err = service.NewFavoriteService(ctx, c).CmtFavoriteAction(req)
	if err != nil {
		utils.ErrResp(c, err)
		return
	}

	c.JSON(consts.StatusOK, &favorite.FavoriteActionResponse{
		StatusCode: errno.SuccessCode,
		StatusMsg:  errno.SuccessMsg,
	})
}

// ArticleFavoriteAction .
// @Summary 对文章进行点赞或者踩
// @Description Allows a user to favorite an article.
// @Tags 点赞或者踩
// @Accept json
// @Produce json
// @Param request body favorite.FavoriteActionRequest true "Request body for favoriting an article"
// @Success 200 {object} favorite.FavoriteActionResponse "Success response"
// @Failure 400 {object} common.BaseResponse "Invalid request"
// @Failure 500 {object} common.BaseResponse "Internal server error"
// @Router /blog_server/favorite/action/article [post]
func ArticleFavoriteAction(ctx context.Context, c *app.RequestContext) {
	var err error
	req := new(favorite.FavoriteActionRequest)
	err = c.BindAndValidate(req)
	if err != nil {
		utils.ErrResp(c, err)
		return
	}
	err = service.NewFavoriteService(ctx, c).ArticleFavoriteAction(req)
	if err != nil {
		utils.ErrResp(c, err)
		return
	}

	c.JSON(consts.StatusOK, &favorite.FavoriteActionResponse{
		StatusCode: errno.SuccessCode,
		StatusMsg:  errno.SuccessMsg,
	})
}
